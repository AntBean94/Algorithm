# BOJ 1041 주사위

'''
반드시 필요한 주사위
1. 가장 위의 모서리: 4개
=> 3면의 합이 가장 적게 오도록
2. 가장 아래 모서리: 4개
=> 2면의 합이 가장 적게 오도록

N > 2 인경우 추가
1. 각 변: 8개 * (N - 2)
=> 2면의 합이 가장 적게 오도록
2. 가장 아래 변: 4 * (N - 2)
=> 1면의 합이 가장 적게 오도록
3. 면: 5 * (N - 2) * (N - 2)
=> 1면의 합이 가장 적게 오도록

알고리즘
1. 각 조건에 맞는 최솟값을 구한다.
- 1면
- 2면(붙어있는)
- 3면(붙어있는)
2. N의 크기에 따라 정답을 구한다.

01, 02, 03, 04
12, 13, 15
24, 25
34, 35


'''

N = int(input())
D = list(map(int, input().split()))
# 조건 별 최솟값(1면, 2면, 3면)
min_val = [250000000000001] * 3
# 첫 번째
min_val[0] = min(D)
# 두 번째
min_val[1] = min(
    D[] + D[], D[] + D[]
)
